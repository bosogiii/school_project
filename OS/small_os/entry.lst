Microsoft (R) Macro Assembler Version 8.00.50727.762	    04/15/16 15:47:52
entry.asm						     Page 1 - 1


						.386P
						.MODEL FLAT
						
						PUBLIC	_EntryPoint16, _m_GdtTable, _m_GdtrDesc
						EXTERN	_myoksos_init:near

				;===============================================================================
				; DECLARE MACROs
				;===============================================================================
				LGDT16	MACRO	addr				; load from ds segment area
						db	3eh
						db	67h
						db	0fh
						db	01h
						db	15h
						dd	addr
				ENDM

				FJMP16	MACRO	selector, offset
						db	66h
						db	0eah
						dd	offset
						dw	selector
				ENDM


 00000000			.CODE
				;===============================================================================
				; EntryPoint called by bootsect.
				;===============================================================================
 00000000			_EntryPoint16		PROC	NEAR

						LGDT16	_m_GdtrDesc-20000h
 00000000  3E		     1			db	3eh
 00000001  67		     1			db	67h
 00000002  0F		     1			db	0fh
 00000003  01		     1			db	01h
 00000004  15		     1			db	15h
 00000005  FFFE0000 R	     1			dd	_m_GdtrDesc-20000h

 00000009  0F 20 C0				mov		eax, cr0
 0000000C  66| 83 C8 01				or		ax, 1
 00000010  0F 22 C0				mov		cr0, eax
 00000013  EB 00				jmp		$+2

						FJMP16	08h, EntryPoint32
 00000015  66		     1			db	66h
 00000016  EA		     1			db	0eah
 00000017  0000001D R	     1			dd	EntryPoint32
 0000001B  0008		     1			dw	08h
						
 0000001D			_EntryPoint16		ENDP

				;===============================================================================
				; 32bit routine
				;===============================================================================
 0000001D			EntryPoint32	PROC		NEAR

 0000001D  66| B8 0010				mov		ax, 10h
 00000021  66| 8E D8		 		mov		ds, ax
 00000024  66| 8E C0		 		mov		es, ax
 00000027  66| 8E E0		 		mov		fs, ax
 0000002A  66| 8E E8		 		mov		gs, ax
 0000002D  66| 8E D0		 		mov		ss, ax
 00000030  BC 0001FFFF		 		mov		esp, 1ffffh		; top of stack

 00000035  B8 000B8000				mov		eax, 0B8000h
 0000003A  66| C7 00 0749			mov		word ptr [eax], 0749h

 0000003F  E8 00000000 E			call	_myoksos_init

 00000044			infinate:
 00000044  F4					hlt
 00000045  EB FD				jmp	infinate
						
 00000047			EntryPoint32	ENDP


 00000000			.DATA
				;===============================================================================
				; GDT table descriptor
				;===============================================================================
								ALIGN	4

 00000000 004F			_m_GdtrDesc		dw		GDT_SIZE-1
 00000002  00000008 R		 				dd		_m_GdtTable

				;===============================================================================
				; GDT table
				;===============================================================================
								ALIGN	4

				;----------------------------------
				; GDT TABLE INDEX #0
				; INDEX      : NULL SELECTOR
				;----------------------------------
 00000008 00000000		_m_GdtTable		dd		0
 0000000C  00000000		 				dd		0

				;----------------------------------
				; GDT TABLE INDEX #1
				; INDEX      : 0x0008h
				; TYPE       : CODE SEGMENT
				; RING LEVEL : 0
				; ATTRIBUTES : Excute/Read, Nonconforming, 4GB
				;----------------------------------
 00000010  FFFF							dw		0ffffh			; segment limit 15:00
 00000012  0000							dw		0000h			; base address 15:00
 00000014  00							db		00h				; base address 23:16
 00000015  9A							db		10011010b		; P | DPL | S | TYPE
 00000016  CF							db		11001111b		; G | D/B | 0 | AVL | segment limit 19:16
 00000017  00							db		00h				; base address 31:24
								
				;----------------------------------
				; GDT TABLE INDEX #2
				; INDEX      : 0x0010h
				; TYPE       : DATA SEGMENT
				; RING LEVEL : 0
				; ATTRIBUTES : Read/Write, 4GB
				;----------------------------------
 00000018  FFFF							dw		0ffffh
 0000001A  0000							dw		0000h
 0000001C  00							db		00h
 0000001D  92							db		10010010b
 0000001E  CF							db		11001111b
 0000001F  00							db		00h
								
				;----------------------------------
				; GDT TABLE INDEX #3
				; INDEX      : 0x001Bh
				; TYPE       : CODE SEGMENT
				; RING LEVEL : 3
				; ATTRIBUTES : Excute/Read, Nonconforming, second 1mega area
				;----------------------------------
 00000020  00FF							dw		000ffh			; segment limit 15:00
 00000022  0000							dw		0000h			; base address 15:00
 00000024  10							db		10h				; base address 23:16
 00000025  FA							db		11111010b		; P | DPL | S | TYPE
 00000026  CF							db		11001111b		; G | D/B | 0 | AVL | segment limit 19:16
 00000027  00							db		00h				; base address 31:24
								
				;----------------------------------
				; GDT TABLE INDEX #4
				; INDEX      : 0x0023h
				; TYPE       : DATA SEGMENT
				; RING LEVEL : 3
				; ATTRIBUTES : Read/Write, second 1mega area
				;----------------------------------
 00000028  00FF							dw		000ffh
 0000002A  0000							dw		0000h
 0000002C  10							db		10h
 0000002D  F2							db		11110010b
 0000002E  CF							db		11001111b
 0000002F  00							db		00h
								
				;----------------------------------
				; GDT TABLE INDEX #5
				; INDEX      : 0x0028h
				; TYPE       : 32-Bit TSS
				; RING LEVEL : 0
				; DESC       : used by tmr_task_gate
				;----------------------------------
 00000030  0067							dw		0067h				; segment limit 15:00
 00000032  0000							dw		0000h				; base address 15:00
 00000034  00							db		00h					; base address 23:16
 00000035  89							db		10001001b			; P | DPL | 0 | TYPE
 00000036  00							db		00000000b			; G | 0 | 0 | AVL | limit 19:16
 00000037  00							db		00h					; base address 31:24

				;----------------------------------
				; GDT TABLE INDEX #6
				; INDEX      : 0x0030h
				; TYPE       : 32-Bit TSS
				; RING LEVEL : 0
				; DESC       : used during system initialization
				;----------------------------------
 00000038  0067							dw		0067h				; segment limit 15:00
 0000003A  0000							dw		0000h				; base address 15:00
 0000003C  00							db		00h					; base address 23:16
 0000003D  89							db		10001001b			; P | DPL | 0 | TYPE
 0000003E  00							db		00000000b			; G | 0 | 0 | AVL | limit 19:16
 0000003F  00							db		00h					; base address 31:24
								
				;----------------------------------
				; GDT TABLE INDEX #7
				; INDEX      : 0x0038h
				; TYPE       : 32-Bit TSS
				; RING LEVEL : 0
				; DESC       : called whenever the system timer generates an interrupt
				;----------------------------------
 00000040  0067							dw		0067h				; segment limit 15:00
 00000042  0000							dw		0000h				; base address 15:00
 00000044  00							db		00h					; base address 23:16
 00000045  89							db		10001001b			; P | DPL | 0 | TYPE
 00000046  00							db		00000000b			; G | 0 | 0 | AVL | limit 19:16
 00000047  00							db		00h					; base address 31:24
								
				;----------------------------------
				; GDT TABLE INDEX #8
				; INDEX      : 0x0040h
				; TYPE       : 32-Bit TSS
				; RING LEVEL : 0
				; DESC       : soft-task-switch. when any thread wants to task-swithing, call this.
				;----------------------------------
 00000048  0067							dw		0067h				; segment limit 15:00
 0000004A  0000							dw		0000h				; base address 15:00
 0000004C  00							db		00h					; base address 23:16
 0000004D  89							db		10001001b			; P | DPL | 0 | TYPE
 0000004E  00							db		00000000b			; G | 0 | 0 | AVL | limit 19:16
 0000004F  00							db		00h					; base address 31:24
								
				;----------------------------------
				; GDT TABLE INDEX #9
				; INDEX      : 0x0048h
				; TYPE       : 32-Bit TSS
				; RING LEVEL : 0
				; DESC       : call-gate for syscall
				;----------------------------------
 00000050  0000							dw		0000h				; offset 15:00
 00000052  0000							dw		0000h				; selector
 00000054  01							db		01h					; dword count = 1 (4bytes)
 00000055  EC							db		11101100b			; P, DPL=3, S=0, TYPE=1100
 00000056  0000							dw		0000h				; offset 31:16

				 
 00000058 = 00000050		GDT_SIZE	EQU	$ - _m_GdtTable		; Size, in bytes

						END
Microsoft (R) Macro Assembler Version 8.00.50727.762	    04/15/16 15:47:52
entry.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

FJMP16 . . . . . . . . . . . . .	Proc
LGDT16 . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000058 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000047 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

EntryPoint32 . . . . . . . . . .	P Near	 0000001D _TEXT	Length= 0000002A Public
  infinate . . . . . . . . . . .	L Near	 00000044 _TEXT	
_EntryPoint16  . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001D Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
GDT_SIZE . . . . . . . . . . . .	Number	 00000050h   
_m_GdtTable  . . . . . . . . . .	DWord	 00000008 _DATA	Public
_m_GdtrDesc  . . . . . . . . . .	Word	 00000000 _DATA	Public
_myoksos_init  . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
